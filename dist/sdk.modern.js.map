{"version":3,"file":"sdk.modern.js","sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/send/unary.js","../src/send/send-transaction.js","../src/send/send-get-transaction.js","../src/send/send-execute-script.js","../src/send/send-get-account.js","../src/send/send-get-block.js","../src/send/send-get-latest-block.js","../src/send/send-get-block-by-id.js","../src/send/send-get-block-by-height.js","../src/send/sdk-send.js","../src/send/send-get-transaction-status.js","../src/send/send-get-events.js","../src/send/send-ping.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-ref-block-id.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/resolve/resolve-accounts.js","../src/encode/encode.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-validators.js","../src/resolve/resolve.js","../src/resolve/resolve-final-normalization.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/latest-block/latest-block.js","../src/account/account.js","../src/build/build-authorizations.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-latest-block.js","../src/build/build-get-block-by-id.js","../src/build/build-get-block-by-height.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-limit.js","../src/build/build-params.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-invariant.js","../src/resolve/resolve-params.js"],"sourcesContent":["export const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const GET_LATEST_BLOCK /*              */ = \"GET_LATEST_BLOCK\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK_BY_ID /*               */ = \"GET_BLOCK_BY_ID\"\nexport const GET_BLOCK_BY_HEIGHT /*           */ = \"GET_BLOCK_BY_HEIGHT\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /* */ = \"ACCOUNT\"\nexport const PARAM /*   */ = \"PARAM\"\nexport const ARGUMENT /**/ = \"ARGUMENT\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst isArray = (d) => Array.isArray(d)\nconst isObj = (d) => typeof d === \"object\"\nconst isNull = (d) => d == null\nconst isNumber = (d) => d === \"number\"\nconst isFn = (d) => typeof d === \"function\"\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\n\nexport const isInteraction = (ix) => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = (ix) => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = (wat) => (ix) => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst makeAccount = (acct, tempId) => (ix) => {\n  ix.accounts[tempId] = JSON.parse(ACCT)\n  ix.accounts[tempId].tempId = tempId\n  ix.accounts[tempId].addr = acct.addr\n  ix.accounts[tempId].keyId = acct.keyId\n  ix.accounts[tempId].sequenceNum = acct.sequenceNum\n  ix.accounts[tempId].signature = acct.signature\n  ix.accounts[tempId].signingFunction = acct.signingFunction\n  ix.accounts[tempId].resolve = acct.resolve\n  ix.accounts[tempId].role = {\n    ...ix.accounts[tempId].role,\n    ...acct.role,\n  }\n  return Ok(ix)\n}\n\nexport const makeAuthorizer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.authorizations.push(tempId)\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makeProposer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.proposer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makePayer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.payer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n} \n\nexport const makeParam = (param) => (ix) => {\n  let tempId = uuid()\n  ix.message.params.push(tempId)\n\n  ix.params[tempId] = JSON.parse(PRM)\n  ix.params[tempId].tempId = tempId\n  ix.params[tempId].key = param.key\n  ix.params[tempId].value = param.value\n  ix.params[tempId].asParam = param.asParam\n  ix.params[tempId].xform = param.xform\n  ix.params[tempId].resolve = param.resolve\n  return Ok(ix)\n}\n\nexport const makeArgument = (arg) => (ix) => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*          */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*            */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*        */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\n\nconst is = (wat) => (ix) => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*          */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*            */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*        */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\n\nexport const isOk /*  */ = (ix) => ix.status === OK\nexport const isBad /* */ = (ix) => ix.status === BAD\nexport const why /*   */ = (ix) => ix.reason\n\nexport const isAccount /*  */ = (account) => account.kind === ACCOUNT\nexport const isParam /*    */ = (param) => param.kind === PARAM\nexport const isArgument /* */ = (argument) => argument.kind === ARGUMENT\n\nconst hardMode = (ix) => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return (d) => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = (v) => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => (ix) => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => (ix) => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = (key) => (ix) => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE =\n'{\"tag\": 0, \"transaction\":null, \"transactionId\":null, \"encodedData\":null, \"events\": null, \"account\": null}'\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {grpc} from \"@improbable-eng/grpc-web\"\nimport {NodeHttpTransport} from \"@improbable-eng/grpc-web-node-http-transport\"\n\ngrpc.setDefaultTransport(NodeHttpTransport())\n\nexport async function unary(host, method, request) {\n  return new Promise((resolve, reject) => {\n    grpc.unary(method, {\n      request: request,\n      host: host,\n      onEnd: ({status, statusMessage, message}) => {\n        if (status === grpc.Code.OK) {\n          resolve(message)\n        } else {\n          reject(new Error(statusMessage))\n        }\n      },\n    })\n  })\n}\n","import {AccessAPI, Transaction, SendTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const tx = new Transaction()\n  tx.setScript(scriptBuffer(ix.message.cadence))\n  tx.setGasLimit(ix.message.computeLimit)\n  tx.setReferenceBlockId(\n    ix.message.refBlock ? hexBuffer(ix.message.refBlock) : null\n  )\n  tx.setPayer(addressBuffer(sansPrefix(ix.accounts[ix.payer].addr)))\n  ix.message.arguments.forEach(arg =>\n    tx.addArguments(argumentBuffer(ix.arguments[arg].asArgument))\n  )\n  ix.authorizations\n    .map(tempId => ix.accounts[tempId].addr)\n    .reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current]\n    }, [])\n    .forEach(addr => tx.addAuthorizers(addressBuffer(sansPrefix(addr))))\n\n  const proposalKey = new Transaction.ProposalKey()\n  proposalKey.setAddress(\n    addressBuffer(sansPrefix(ix.accounts[ix.proposer].addr))\n  )\n  proposalKey.setKeyId(ix.accounts[ix.proposer].keyId)\n  proposalKey.setSequenceNumber(ix.accounts[ix.proposer].sequenceNum)\n\n  tx.setProposalKey(proposalKey)\n\n  // Apply Non Payer Signatures to Payload Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addPayloadSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying payload signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addEnvelopeSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying envelope signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  const req = new SendTransactionRequest()\n  req.setTransaction(tx)\n\n  var t1 = Date.now()\n  const res = await unary(opts.node, AccessAPI.SendTransaction, req)\n  var t2 = Date.now()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionId = u8ToHex(res.getId_asU8())\n\n  if (typeof window !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransaction, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const unwrapKey = key => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    sequenceNumber: key.getSequenceNumber()\n  })\n\n  const unwrapSignature = sig => ({\n    address: u8ToHex(sig.getAddress_asU8()),\n    keyId: sig.getKeyId(),\n    signature: u8ToHex(sig.getSignature_asU8())\n  })\n\n  let transaction = res.getTransaction()\n  ret.transaction = {\n      script: Buffer.from(transaction.getScript_asU8()).toString(\"utf8\"),\n      args: (transaction.getArgumentsList()).map(arg => JSON.parse(Buffer.from(arg).toString(\"utf8\"))),\n      referenceBlockId: u8ToHex(transaction.getReferenceBlockId_asU8()),\n      gasLimit: transaction.getGasLimit(),\n      proposalKey: unwrapKey(transaction.getProposalKey()),\n      payer: u8ToHex(transaction.getPayer_asU8()),\n      authorizers: (transaction.getAuthorizersList()).map(u8ToHex),\n      payloadSignatures: (transaction.getPayloadSignaturesList()).map(unwrapSignature),\n      envelopeSignatures: (transaction.getEnvelopeSignaturesList()).map(unwrapSignature)\n  }\n\n  return ret\n}\n","import {ExecuteScriptAtLatestBlockRequest, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendExecuteScript(ix, opts = {}) {\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new ExecuteScriptAtBlockIDRequest()\n    \n    req.setBlockId(hexBuffer(ix.block.id))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockID, req)\n  } else if (ix.block.height) {\n    req = new ExecuteScriptAtBlockHeightRequest()\n\n    req.setBlockHeight(Number(ix.block.height))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockHeight, req)\n  } else {\n    req = new ExecuteScriptAtLatestBlockRequest()\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtLatestBlock, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.encodedData = JSON.parse(Buffer.from(res.getValue_asU8()).toString(\"utf8\"))\n\n  return ret\n}\n","import {GetAccountAtLatestBlockRequest, GetAccountAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nexport async function sendGetAccount(ix, opts = {}) {\n  ix = await ix\n\n  const req = ix.block.height ? new GetAccountAtBlockHeightRequest() : new GetAccountAtLatestBlockRequest()\n  if (ix.block.height) req.setHeight(Number(ix.block.height))\n  req.setAddress(addressBuffer(sansPrefix(ix.account.addr)))\n\n  const res = await unary(opts.node, ix.block.height ? AccessAPI.GetAccountAtBlockHeight : AccessAPI.GetAccountAtLatestBlock, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const account = res.getAccount()\n\n  let contractsMap;\n  const contracts = (contractsMap = account.getContractsMap()) ? contractsMap.getEntryList().reduce((acc, contract) => ({\n    ...acc,\n    [contract[0]]: new TextDecoder(\"utf-8\").decode(contract[1] || new UInt8Array())\n  }), {}) : {}\n\n  ret.account = {\n    address: withPrefix(u8ToHex(account.getAddress_asU8())),\n    balance: account.getBalance(),\n    code: new TextDecoder(\"utf-8\").decode(account.getCode_asU8() || new UInt8Array()),\n    contracts,\n    keys: account.getKeysList().map(publicKey => ({\n      index: publicKey.getIndex(),\n      publicKey: u8ToHex(publicKey.getPublicKey_asU8()),\n      signAlgo: publicKey.getSignAlgo(),\n      hashAlgo: publicKey.getHashAlgo(),\n      weight: publicKey.getWeight(),\n      sequenceNumber: publicKey.getSequenceNumber(),\n      revoked: publicKey.getRevoked(),\n    })),\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, GetBlockByHeightRequest, GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlock(ix, opts = {}) {\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new GetBlockByIDRequest()\n    req.setId(hexBuffer(ix.block.id))\n\n    res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n  } else if (ix.block.height) {\n    req = new GetBlockByHeightRequest()\n    req.setHeight(Number(ix.block.height))\n\n    res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n  } else {\n    req = new GetLatestBlockRequest()\n\n    res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n  }\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nconst latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport async function sendGetLatestBlock(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetLatestBlockRequest()\n\n  if (ix.latestBlock && ix.latestBlock.isSealed) {\n    req.setIsSealed(ix.latestBlock.isSealed)\n    latestBlockDeprecationNotice()\n  }\n\n  if (ix.block && ix.block.isSealed) {\n    req.setIsSealed(ix.block.isSealed)\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockById(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByIDRequest()\n  req.setId(hexBuffer(ix.block.id))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetBlockByHeight(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByHeightRequest()\n  req.setHeight(Number(ix.block.height))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {\n    isTransaction,\n    isGetTransaction,\n    isGetTransactionStatus,\n    isScript,\n    isGetAccount,\n    isGetEvents,\n    isGetBlock,\n    isGetLatestBlock,\n    isGetBlockById,\n    isGetBlockByHeight,\n    isPing,\n} from \"../interaction/interaction.js\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetLatestBlock} from \"./send-get-latest-block.js\"\nimport {sendGetBlockById} from \"./send-get-block-by-id.js\"\nimport {sendGetBlockByHeight} from \"./send-get-block-by-height.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {config} from \"@onflow/config\"\n\nexport const send = async (ix, opts = {}) => {\n    opts.node = opts.node || (await config().get(\"accessNode.api\"))\n    ix = await ix\n\n    switch (true) {\n        case isTransaction(ix):\n            return sendTransaction(ix, opts)\n        case isGetTransactionStatus(ix):\n            return sendGetTransactionStatus(ix, opts)\n        case isGetTransaction(ix):\n            return sendGetTransaction(ix, opts)\n        case isScript(ix):\n            return sendExecuteScript(ix, opts)\n        case isGetAccount(ix):\n            return sendGetAccount(ix, opts)\n        case isGetEvents(ix):\n            return sendGetEvents(ix, opts)\n        case isGetLatestBlock(ix):\n            return sendGetLatestBlock(ix, opts)\n        case isGetBlock(ix):\n            return sendGetBlock(ix, opts)\n        case isGetBlockById(ix):\n            return sendGetBlockById(ix, opts)\n        case isGetBlockByHeight(ix):\n            return sendGetBlockByHeight(ix, opts)\n        case isPing(ix):\n            return sendPing(ix, opts)\n        default:\n            return ix\n    }\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransactionStatus(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransactionResult, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    status: res.getStatus(),\n    statusCode: res.getStatusCode(),\n    errorMessage: res.getErrorMessage(),\n    events: events.map(event => ({\n      type: event.getType(),\n      transactionId: u8ToHex(event.getTransactionId_asU8()),\n      transactionIndex: event.getTransactionIndex(),\n      eventIndex: event.getEventIndex(),\n      payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n    })),\n  }\n\n  return ret\n}\n","import {GetEventsForHeightRangeRequest, GetEventsForBlockIDsRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetEvents(ix, opts = {}) {\n  ix = await ix\n \n  const req = ix.events.start ? new GetEventsForHeightRangeRequest() : new GetEventsForBlockIDsRequest()\n  req.setType(ix.events.eventType)\n  \n  if (ix.events.start) {\n    req.setStartHeight(Number(ix.events.start))\n    req.setEndHeight(Number(ix.events.end))\n  } else {\n    ix.events.blockIds.forEach(id =>\n      req.addBlockIds(hexBuffer(id))\n    )\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetEventsForHeightRange, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const results = res.getResultsList()\n  ret.events = results.reduce((blocks, result) => {\n    const blockId = result.getBlockId()\n    const blockHeight = result.getBlockHeight()\n    const blockTimestamp = result.getBlockTimestamp()\n    const events = result.getEventsList()\n    events.forEach(event => {\n      blocks.push({\n        blockId,\n        blockHeight,\n        blockTimestamp,\n        type: event.getType(),\n        transactionId: u8ToHex(event.getTransactionId_asU8()),\n        transactionIndex: event.getTransactionIndex(),\n        eventIndex: event.getEventIndex(),\n        payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n      })\n    })\n    return blocks\n  }, [])\n\n  return ret\n}\n","import {AccessAPI, PingRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nexport async function sendPing(ix, opts = {}) {\n  ix = await ix\n\n  const req = new PingRequest()\n\n  const res = await unary(opts.node, AccessAPI.Ping, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    }\n  ])\n}\n","const latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async (i) => i\n\nconst decodeVoid = async () => null\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async (v) => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      (v) =>\n        new Promise(async (res) =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[\n      await recurseDecode(v.key, decoders, [...stack, v.key])\n    ] = await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeNumber,\n  Int: decodeNumber,\n  UInt8: decodeNumber,\n  Int8: decodeNumber,\n  UInt16: decodeNumber,\n  Int16: decodeNumber,\n  UInt32: decodeNumber,\n  Int32: decodeNumber,\n  UInt64: decodeNumber,\n  Int64: decodeNumber,\n  UInt128: decodeNumber,\n  Int128: decodeNumber,\n  UInt256: decodeNumber,\n  Int256: decodeNumber,\n  Word8: decodeNumber,\n  Word16: decodeNumber,\n  Word32: decodeNumber,\n  Word64: decodeNumber,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find((decoder) => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n  return await recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n\n  if (response.encodedData) {\n    return await decode(response.encodedData, decoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, decoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, decoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  }\n\n  return null\n}\n","import {isTransaction, Ok, interaction, pipe} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\n\nasync function getRefId (opts) {\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await send(ix, opts)\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.0\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = [...authorizations, ax.tempId]\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import { encode } from '@onflow/rlp';\n\nexport const encodeTransactionPayload = tx => rlpEncode(preparePayload(tx))\nexport const encodeTransactionEnvelope = tx => rlpEncode(prepareEnvelope(tx))\n\nconst paddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => paddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.script),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.gasLimit,\n    addressBuffer(tx.proposalKey.address),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(tx.payer),\n    tx.authorizers.map(addressBuffer),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  envelopeFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"script\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"gasLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst envelopeFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nfunction buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.0\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    script: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    gasLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import { get, pipe, Ok, Bad } from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, 'ix.validators', [])\n  return pipe(ix, validators.map(cb => ix => cb(ix, { Ok, Bad })))\n}   \n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nimport {send} from \"../send/sdk-send.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveRefBlockId} from \"./resolve-ref-block-id.js\"\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\n\nexport const resolve = pipe([\n    resolveCadence,\n    resolveArguments,\n    resolveAccounts,\n    /* special */ execFetchRef,\n    /* special */ execFetchSequenceNumber,\n    resolveSignatures,\n    resolveFinalNormalization,\n    resolveValidators,\n])\n\nasync function execFetchRef(ix) {\n    if (isTransaction(ix) && ix.message.refBlock == null) {\n        ix.message.refBlock = (await send(build([getBlock()])).then(decode)).id\n    }\n    return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\nif (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n    ix.accounts[acct.tempId].sequenceNum = await send(await build([getAccount(acct.addr)])).then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n}\nreturn ix\n}\n  ","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\nimport {send as defaultSend} from \"./sdk-send.js\"\n\nexport const send = async (args = [], opts = {}) => {\n  const sendFunction = await config().get(\"sdk.send\", opts.send || defaultSend)\n  const resolveFunction = await config().get(\n    \"sdk.resolve\",\n    opts.resolve || defaultResolve\n  )\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFunction(await resolveFunction(args), opts)\n}\n\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nexport function latestBlock(...args) {\n  let opts = args[1] || (typeof args[0] === \"object\" ? args[0] : undefined)\n  let isSealed = typeof args[0] === \"boolean\" ? args[0] : undefined\n\n  if (typeof args[0] === \"object\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n\n  return send([getBlock(isSealed)], opts).then(decode)\n}\n","import {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\nexport function account(address, opts) {\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {pipe, makeAuthorizer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  authorizer: true,\n}\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map((authz) => {\n      return typeof authz === \"function\"\n        ? makeAuthorizer({resolve: authz, role: roles, roles})\n        : makeAuthorizer({...authz, role: roles, roles})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n    return update('ix.validators', validators => \n        Array.isArray(validators) ? validators.push(cb) : [cb]\n    )\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block height and isSealed.\")\n      if (ix.block.id) return Bad(ix, \"Unable to specify both block height and block id.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix)) return Bad(ix, \"Unable to specify a block id with a Get Account interaction.\")\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height) return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEvents(eventType, start, end) {\n\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )  \n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockHeightRange(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockIds(blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"../interaction/interaction.js\"\n\nexport function getLatestBlock(isSealed = false) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockById} from \"../interaction/interaction.js\"\n\nexport function getBlockById(id) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockById,\n    ix => {\n      ix.block.ids = [id]\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockByHeight} from \"../interaction/interaction.js\"\n\nexport function getBlockByHeight(height) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockByHeight,\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function limit(computeLimit) {\n  return pipe([\n    ix => {\n      ix.message.computeLimit = computeLimit\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeParam} from \"../interaction/interaction.js\"\n\nexport function params(px = []) {\n  return pipe(px.map(makeParam))\n}\n\nexport function param(value, xform = null, key = null) {\n  return {key, value, xform: null}\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {pipe, makeProposer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  proposer: true,\n}\n\nexport async function proposer(authz) {\n  return typeof authz === \"function\"\n    ? makeProposer({resolve: authz, role: roles, roles})\n    : makeProposer({...authz, role: roles, roles})\n}\n","import {pipe, makePayer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  payer: true\n}\n\nexport function payer(authz) {\n  return typeof authz === \"function\"\n    ? makePayer({resolve: authz, role: roles, roles})\n    : makePayer({...authz, role: roles, roles})\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([\n    makeScript,\n    put(\"ix.cadence\", template(...args))\n  ])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.computeLimit = ix.message.computeLimit || DEFAULT_COMPUTE_LIMIT\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import { Ok, Bad } from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, { Ok, Bad }) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {resolveCadence} from \"./resolve-cadence.js\"\n\nexport function resolveParams (ix) {\n  console.error(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n\n      The resolver sdk.resolveParams is being replaced with the package @onflow/sdk-resolve-cadence\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0002-deprecate-resolve-params-resolver\n\n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n\n  return resolveCadence(ix)\n}\n"],"names":["IX","KEYS","Set","Object","keys","JSON","parse","interaction","isNull","d","CHARS","split","randChar","Math","random","length","uuid","Array","from","join","Ok","ix","status","Bad","reason","makeIx","wat","tag","makeAccount","acct","tempId","accounts","addr","keyId","sequenceNum","signature","signingFunction","resolve","role","makeParam","param","message","params","push","key","value","asParam","xform","makeArgument","arg","arguments","asArgument","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","makeGetBlock","makeGetBlockHeader","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isGetBlock","isGetBlockHeader","isOk","isBad","why","recPipe","async","fns","has","Error","hardMode","hd","rest","cur","hasOwnProperty","isInteraction","e","pipe","args","arg1","arg2","isArray","identity","v","get","fallback","assigns","put","update","fn","destroy","build","response","unary","host","method","request","Promise","reject","grpc","onEnd","statusMessage","Code","OK","setDefaultTransport","NodeHttpTransport","hexBuffer","hex","Buffer","addressBuffer","padStart","pad","u8ToHex","u8","toString","argumentBuffer","stringify","send","opts","node","config","tx","Transaction","setScript","script","scriptBuffer","cadence","setGasLimit","computeLimit","setReferenceBlockId","refBlock","setPayer","sansPrefix","payer","forEach","addArguments","authorizations","map","reduce","prev","current","find","item","addAuthorizers","proposalKey","ProposalKey","setAddress","proposer","setKeyId","setSequenceNumber","setProposalKey","values","sig","Signature","setSignature","addPayloadSignatures","error","console","addEnvelopeSignatures","req","SendTransactionRequest","setTransaction","t1","Date","now","res","AccessAPI","SendTransaction","t2","ret","transactionId","getId_asU8","window","dispatchEvent","CustomEvent","detail","txId","delta","sendTransaction","GetTransactionRequest","setId","transaction","id","GetTransactionResult","events","getEventsList","transactionStatus","getStatus","statusCode","getStatusCode","errorMessage","getErrorMessage","event","type","getType","getTransactionId_asU8","transactionIndex","getTransactionIndex","eventIndex","getEventIndex","payload","getPayload_asU8","sendGetTransactionStatus","GetTransaction","unwrapSignature","address","getAddress_asU8","getKeyId","getSignature_asU8","getTransaction","getScript_asU8","getArgumentsList","referenceBlockId","getReferenceBlockId_asU8","gasLimit","getGasLimit","getProposalKey","sequenceNumber","getSequenceNumber","getPayer_asU8","authorizers","getAuthorizersList","payloadSignatures","getPayloadSignaturesList","envelopeSignatures","getEnvelopeSignaturesList","sendGetTransaction","block","ExecuteScriptAtBlockIDRequest","setBlockId","code","ExecuteScriptAtBlockID","height","ExecuteScriptAtBlockHeightRequest","setBlockHeight","Number","ExecuteScriptAtBlockHeight","ExecuteScriptAtLatestBlockRequest","ExecuteScriptAtLatestBlock","encodedData","getValue_asU8","sendExecuteScript","GetAccountAtBlockHeightRequest","GetAccountAtLatestBlockRequest","setHeight","account","GetAccountAtBlockHeight","GetAccountAtLatestBlock","getAccount","contractsMap","contracts","getContractsMap","getEntryList","acc","contract","[object Object]","TextDecoder","decode","UInt8Array","withPrefix","balance","getBalance","getCode_asU8","getKeysList","publicKey","index","getIndex","getPublicKey_asU8","signAlgo","getSignAlgo","hashAlgo","getHashAlgo","weight","getWeight","revoked","getRevoked","sendGetAccount","start","GetEventsForHeightRangeRequest","GetEventsForBlockIDsRequest","setType","eventType","setStartHeight","setEndHeight","end","blockIds","addBlockIds","GetEventsForHeightRange","results","getResultsList","blocks","result","blockId","getBlockId","blockHeight","getBlockHeight","blockTimestamp","getBlockTimestamp","sendGetEvents","GetLatestBlockRequest","latestBlock","isSealed","setIsSealed","replace","trim","GetLatestBlock","getBlock","collectionGuarantees","getCollectionGuaranteesList","blockSeals","getBlockSealsList","signatures","getSignaturesList","parentId","getParentId_asU8","getHeight","timestamp","getTimestamp","collectionGuarantee","collectionId","getCollectionId_asU8","blockSeal","getBlockId_asU8","executionReceiptId","getExecutionReceiptId_asU8","executionReceiptSignatures","getExecutionReceiptSignaturesList","resultApprovalSignatures","getResultApprovalSignaturesList","sendGetLatestBlock","GetBlockByIDRequest","GetBlockByID","GetBlockByHeightRequest","GetBlockByHeight","sendGetBlock","sendGetBlockById","sendGetBlockByHeight","PingRequest","Ping","sendPing","decodeNumber","num","_","stack","decodeImplicit","i","decodeComposite","composite","decoders","decoded","fields","name","recurseDecode","decoder","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","optional","Reference","array","all","Dictionary","dictionary","Event","Resource","Struct","lookup","found","test","RegExp","substring","decodeInstructions","customDecoders","decodeResponse","data","blockHeader","resolveRefBlockId","getRefId","isFn","isString","resolveCadence","invariant","where","then","entries","cast","resolveArguments","buildPreSignable","f_type","f_vsn","roles","collectAccounts","last","depth","ax","old","authorizer","curr","resolveAccounts","paddedHexBuffer","argumentToString","rlpEncode","encode","preparePayload","validatePayload","preparePayloadSignatures","signers","collectSigners","payloadSigs","signerIndex","sort","a","b","Map","addSigner","set","payloadFields","field","checkField","proposalKeyFields","isNumber","isObject","check","defaultVal","envelopeFields","payloadSigFields","obj","base","missingFieldError","invalidFieldError","printFieldName","resolveSignatures","insideSigners","inside","add","delete","findInsideSigners","insidePayload","prepForEncoding","fetchSignature","outsideSigners","outside","findOutsideSigners","outsidePayload","validateEnvelope","prepareEnvelope","encodeOutsideMessage","buildSignable","cid","resolveValidators","validators","cb","sendFunction","defaultSend","resolveFunction","defaultResolve","decodersFromConfig","pattern","fromEntries","undefined","warn","authz","authorization","validator","atBlockHeight","atBlockId","getEvents","getEventsAtBlockHeightRange","getEventsAtBlockIds","getBlockHeader","getLatestBlock","getBlockById","ids","getBlockByHeight","getTransactionStatus","limit","px","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","predicate","resolveParams"],"mappings":"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"}